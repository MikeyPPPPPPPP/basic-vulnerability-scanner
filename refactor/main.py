from tools.process_args import procces
from tools.config import config
from tools import waf_test
from tools import utils
from tools import tech_checker
from tools import misconfigurations

def main(args):
    config_file = config.setup()
    config_file.returnSettings()
    config_file.setup_configuration_file(config_file.returnSettings(), args)
    
    
    if args.url and args.spacific:
        if args.spacific == 1:
            t = waf_test.waf_detector(config_file.returnSettings())
            testingone = t.check_WAF()


            for wafs in testingone:
                if wafs != "none found":
                    print(wafs)

        elif args.spacific == 2:
            t = tech_checker.check_tech(config_file.returnSettings())
            testingone = t.basic_check_tech()
            config_file.changeSetting('tech', testingone)

        else:
            if args.tech in [te for te in config_file.returnSettings()["possible_tech"]]:
                t = misconfigurations.check_misconfigurations(config_file.returnSettings())
                spacific_misconfigurations = misconfigurations.use_ffuf(t)
                for mis in spacific_misconfigurations:
                    print(mis)
            else:
                print(config_file.returnSettings()["possible_tech"])


    elif args.url:
        w = waf_test.waf_detector(config_file.returnSettings())
        testingone = w.check_WAF()


        t = tech_checker.check_tech(config_file.returnSettings())
        testingone = t.basic_check_tech()
        config_file.changeSetting('tech', testingone)

        if config_file.returnSettings()["tech"][0] in [te for te in config_file.returnSettings()["possible_tech"]]:
            t = misconfigurations.check_misconfigurations(config_file.returnSettings())
            spacific_misconfigurations = misconfigurations.use_ffuf(t)
        else:
            t = misconfigurations.check_misconfigurations(config_file.returnSettings())
            spacific_misconfigurations = t.check_basic_misconfigs()

        for mis in spacific_misconfigurations:
                print(mis)
        for x in testingone:
            print(x)
    else:
        pass
    
    




if __name__ == '__main__':
    args = procces.get_args()
    if args.url:
        main(args)








